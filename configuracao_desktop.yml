- name: run the playbook tasks on the localhost
  hosts: 127.0.0.1
  connection: local

  roles:
    - flashplayer
    - java8-oracle

  tasks:

  - name: Configura o source.list
    copy:
      content: |
        # Original APT package sources gathered by Ansible
        deb http://debian.pop-sc.rnp.br/debian buster main contrib non-free
        deb http://debian.pop-sc.rnp.br/debian buster-updates main contrib non-free
        deb http://debian.pop-sc.rnp.br/debian buster-backports main contrib non-free

        deb http://debian.pop-sc.rnp.br/debian bullseye main contrib non-free
        deb http://debian.pop-sc.rnp.br/debian bullseye-updates main contrib non-free
        deb http://debian.pop-sc.rnp.br/debian bullseye-backports main contrib non-free

        # Official Debian repositories
        deb http://deb.debian.org/debian bullseye main contrib non-free
        deb http://deb.debian.org/debian bullseye-updates main contrib non-free
        deb http://deb.debian.org/debian bullseye-backports main contrib non-free
      dest: /etc/apt/sources.list
      owner: root
      group: root
      mode: 0644
    when: (ansible_os_family == 'Debian' and ansible_distribution_release == 'bullseye')

  - name: Atualiza PATH no profile - Linux Debian bullseye
    replace:
      path: /etc/profile
      regexp: '/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games'
      replace: '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games:/snap/bin'
    when: (ansible_os_family == 'Debian' and ansible_distribution_release == 'bullseye')

  - name: Change /etc/bash.bashrc
    blockinfile:
      path: /etc/bash.bashrc
      backup: yes
      block: |
        # enable bash completion in interactive shells
        if ! shopt -oq posix; then
          if [ -f /usr/share/bash-completion/bash_completion ]; then
            . /usr/share/bash-completion/bash_completion
          elif [ -f /etc/bash_completion ]; then
            . /etc/bash_completion
          fi
        fi
        
        export HISTCONTROL=ignoredups:erasedups  # no duplicate entries
        export HISTSIZE=100000                   # big big history
        export HISTFILESIZE=100000               # big big history
        shopt -s histappend                      # append to history, don't overwrite it
        # Save and reload the history after each command finishes
        export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"
        export HISTTIMEFORMAT="%d/%m/%y %T "
    when: (ansible_os_family == 'Debian' and ansible_distribution_release == 'bullseye')


  - name: update apt cache
    apt: update_cache=yes
    when: ansible_os_family == 'Debian'

  - name: Upgrade all packages to the latest version
    apt: name="*" state=latest
    when: ansible_os_family == 'Debian'
  
  - name: Instalar pacotes padroes - Linux
    apt: 
      name: "{{ packages }}"
      state:  latest
    vars:
      packages:
      - aptitude 
      - vim 
      - firmware-linux 
      - vlc 
      - unrar 
      - dkms 
      - ntp 
      - ssh 
      - ttf-mscorefonts-installer 
      - dia 
      - kolourpaint4 
      - kdenlive
      - kdevelop-l10n
      - nmap
      - mtr
      - ntfs-3g
      - xournal
      - ipcalc
      - tcpdump
      - bash-completion
      - git
      - transmission-gtk
      - pdfshuffler
      - libnss3-tools
      - libcurl3-nss
      - firefox-esr-l10n-pt-br
      - keepassxc
      - firmware-realtek
      - dnsutils
      - ldap-utils
    when: ansible_os_family == 'Debian'
  
  - name: Remove pacotes
    apt:
      name: "{{ packages }}"
      state: absent
    vars:
      packages:        
      - gnome-games
      - evolution
      - cheese
      - gnome-maps
      - rhythmbox
      - xterm
      - totem
      - gnome-todo
      - gnome-contacts
      - gnome-documents
    when: ansible_os_family == 'Debian'

  - name: Instala m칩dulo WL (Wireless)
    apt:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:        
      - linux-headers-{{ ansible_kernel }}
      - broadcom-sta-dkms
    when: (ansible_os_family == 'Debian' and ansible_hostname == 'sj-lin-ctic-37247')

  - name: Blacklist the pcspkr driver module
    kernel_blacklist:
      name: pcspkr
      state: present
    when: ansible_os_family == 'Debian'

  - name: Instalar o .deb warsaw - Linux Debian
    apt:
      deb: https://cloud.gastecnologia.com.br/bb/downloads/ws/warsaw_setup64.deb
    when: ansible_distribution == 'Debian'

  - name: Install a .deb Google Chrome - Linux Debian
    apt:
      deb: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    when: ansible_os_family == 'Debian'
  
  - name: Install a .deb Dropbox - Linux Debian
    apt:
      deb: https://www.dropbox.com/download?dl=packages/ubuntu/dropbox_2019.02.14_amd64.deb
    when: ansible_os_family == 'Debian'

  - name: Adicionar a chave do reposit칩rio do docker no bullseye
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present
    when: (ansible_os_family == 'Debian' and ansible_distribution_release == 'bullseye')

  - name: Adicionar reposit칩rio do docker no bullseye
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/debian buster stable
      state: present
      update_cache: yes
    when: (ansible_os_family == 'Debian' and ansible_distribution_release == 'bullseye')

  - name: Instalar pacotes necess치rios do Docker
    apt:
      state: latest
      pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common
    when: (ansible_os_family == 'Debian')

  - name: Instalar o docker no bullseye
    apt: name={{ packages }} state=latest
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    when: (ansible_os_family == 'Debian' and ansible_distribution_release == 'bullseye')

  - name: Remove useless packages from the cache
    apt: autoclean=yes
    when: ansible_os_family == 'Debian'

  - name: Remove dependencies that are no longer required
    apt: autoremove=yes
    when: ansible_os_family == 'Debian'
